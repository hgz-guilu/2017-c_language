module Delay_Filter(CLK, RST_n, H2L_Sig, L2H_Sig, oSignal);
    input CLK;
	 input RST_n;
	 input H2L_Sig;
	 input L2H_Sig;
	 output oSignal;
	/***************************************************************/
	 reg [3:0]count_CLK;
	 always @ ( posedge CLK or negedge RST_n )
        if( !RST_n )
		      count_CLK <= 4'd0;
		  else if( isCount )
		      count_CLK <= count_CLK + 1'b1;
		  else if( !isCount )
		      count_CLK <= 4'd0;
	reg [1:0]state;
	always@(posedge CLK or negedge RST_n)
	if(!RST_n)
	begin
	  state<=2d'0;
	  isCount<=1'b0;
	end
	else
	begin
	  case(state)
	  2'd0:
	    begin
	     if(H2L_Sig)
		    state<=2'd1;
		  else if(L2H_Sig)
		    state<=2'd2;
		  isCount<=1'b0;//用于清0计数器
		 end 
	  2'd1:
	    if(count_CLK==4'd10)
		 begin
		   isCount<=1'b0;
			rSignal<=1'b1;
			state<=2'd0;
		 end
		 else
		   isCount<=1'b1;
			
	  2'd2:
	    if(count_CLK==10)
		 begin
		   isCount<=1'b0;
			rSignal<=1'b0;
			state<=2'd0;
		 end
		 else
		   isCount<=1'b1;
			
	  default:state<=2'd0;
	  endcase
	end
	assign oSignal=rSignal;
endmodule