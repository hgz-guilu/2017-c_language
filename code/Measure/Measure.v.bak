module Measure(CLOCK_50M,RST_n,iRESR_signalA,iRESR_signalZ,iRGS_signalA,Signal_Corotation,
				Frame_Start_Sig,Data_Send_Sig,Data,LED
				);


input CLOCK_50M;
input RST_n;
input iRESR_signalA;    //??????????????????????
input iRESR_signalZ;          //????????????0???
input iRGS_signalA;		//????????????????????
input Signal_Corotation;  //???????????1?????????0?????
 output Frame_Start_Sig;//?????????????????????
 output Data_Send_Sig;//???????????8?????
 output [7:0]Data;//????8x8??????????????????????? ??	
 output [8:0]LED;//??????
/***************************************************************************/
`define MEASURE_RESR_NUM  16   //1296-1
`define GROUP_NUM         10

/******************************************************************************/
reg [15:0]group_count;//?????????????????????????
reg [15:0]RESR_pulse_count0;//??????????????????????????
reg [15:0]RESR_pulse_count1;//???????????????????????????????
reg [15:0]RESR_pulse_count2;//????????????????????????????????
reg is_group_measure_start;
reg is_measure_start;//???????0??????????
reg is_first_ZERO_pulse;//???0??????
reg group_measure_again;//?????????????
reg [15:0]RGS_pulse_count;
reg detected_first_RGS_pulse;//????????????????????
reg start_RGS_pulse_count;//??????????????????????
reg is_first_RGS_pulse;//??????????????????
reg rFrame_Start_Sig;
reg [15:0]RESR_pulse_value;
reg [15:0]RGS_pulse_value;
reg [7:0]rData;
reg rData_Send_Sig;
reg [7:0]num;
reg start_send;
/****************************************************************************/
reg [8:0]rLED;
always@(posedge CLOCK_50M or negedge RST_n)
	if(!RST_n)
		rLED<=8'd0;
	else if(iRESR_signalZ)//???0?????????????	
		rLED<=~rLED;	
assign LED=rLED;


/***************************************************************************
-----------------------------------------------------------
iSignal_A | 
---------------------------------------------------------------
0??????????????????????????????
??????????
?????0??????????????????0????????????
???????
???????????????????????????????????????
	  ??0???????????????????????????????????
	  
???????????????????????????????????????
????????1696?????????
--------------------------------------------------------------
?????????????????0??????
?????????????1000??????????????1296000/????
???????????1296??????1000?????????1000???????????
???
--------------------------------------------------------------
???????????????????????????????????
******************************************************************************/


always@(posedge CLOCK_50M or negedge RST_n)
	if(!RST_n)
	begin
		is_first_ZERO_pulse<=1'b1;
		is_measure_start<=1'b0;
		group_measure_again<=1'b0;
	end
	else if(iRESR_signalZ)//???0?????????????
	begin
		if(is_first_ZERO_pulse)//??????0???
		begin
			is_first_ZERO_pulse<=1'b0;
			is_measure_start<=1'b1;//??????????????????
		end			
		group_measure_again<=1'b1;//?????????????
	end
	else if(is_group_measure_start)
		group_measure_again<=1'b1;
	else
		group_measure_again<=1'b0;

/*******************************************************************************/

always@(posedge CLOCK_50M)
  if(!RST_n || !is_measure_start)//???????????????
  begin
	group_count<=16'd0;
    RESR_pulse_count0<=16'd0;
	RESR_pulse_count1<=16'd0;
	RESR_pulse_count2<=16'd0;
  end
  else if(is_measure_start)//?????????  
  begin
	if(iRESR_signalZ)//???0???
	begin
		group_count<=16'd0;
		RESR_pulse_count0<=16'd0;
		RESR_pulse_count1<=16'd0;
		RESR_pulse_count2<=16'd0;
	end//group_measure_again????iRESR_signalZ?????????????else
	else if(group_measure_again)//???????????
	begin
		if(iRESR_signalA==1'b1)//?????????????????????????????????
			RESR_pulse_count0<=16'd1;
		else
			RESR_pulse_count0<=16'd0;
	end
	else if(iRESR_signalA==1'b1)
	begin		
		if(RESR_pulse_count0>=`MEASURE_RESR_NUM )//????????????????????????????>=????
		begin
			if(group_count<`GROUP_NUM)//?????????????????????????????
			begin
				is_group_measure_start<=1'b1;
				group_count<=group_count+16'd1;//?????????0????????0
				RESR_pulse_count0<=1'b0;//????
			end	
		end
		else
		begin
			RESR_pulse_count0<=RESR_pulse_count0+16'd1;
			is_group_measure_start<=1'b0;
		end	
	end
	if(detected_first_RGS_pulse)//??????????????????????????????????
	begin
		if(group_count[0]==1'b0)//??????
			RESR_pulse_count1<=RESR_pulse_count0;
		else					//??????
			RESR_pulse_count2<=RESR_pulse_count0;
	end
  end
/**************************************************************/

always@(posedge CLOCK_50M)
  if(!RST_n || !is_measure_start)//???????????????
  begin
	detected_first_RGS_pulse<=1'b0;//??????????????????????????
	start_RGS_pulse_count<=1'b0;
	RGS_pulse_count<=16'd0;
	is_first_RGS_pulse<=1'b0;//???????????????
  end
  else if(is_measure_start)//???????????????????????  
  begin	
	if(group_measure_again)//???????????????????????
	begin
		start_RGS_pulse_count<=1'b1;
		detected_first_RGS_pulse<=1'b0;
		is_first_RGS_pulse<=1'b1;
	end
	else if(start_RGS_pulse_count)
	begin
		if(iRGS_signalA)
		begin
			if(is_first_RGS_pulse)
			begin
				is_first_RGS_pulse<=1'b0;
				detected_first_RGS_pulse<=1'b1;
			end
			else
				detected_first_RGS_pulse<=1'b0;
			RGS_pulse_count<=RGS_pulse_count+16'd1;						
	   end
   end		
  end
 /*------------------?????????------------------------------------*/
reg sampling_signal;
reg [1:0]count;
always@(posedge CLOCK_50M or negedge RST_n)
	if(!RST_n)
	begin
		count<=2'd0;
		sampling_signal<=1'b0;
	end
	else if(is_measure_start)
	begin
		if(detected_first_RGS_pulse)
		begin
			if(count>=2'd1)
				sampling_signal<=1'b1;
			else
				count<=count+2'd1;
		end
		else
			sampling_signal<=1'b0;
	end
	
  
  

/*******************************?????????????****************************************************/

/*----------------------------------------------------
?????????????????
------------------------------------------------------*/

always@(posedge CLOCK_50M or negedge RST_n)
	if(!RST_n)
	begin
		rFrame_Start_Sig<=1'b0;		
		RESR_pulse_value<=16'd0;
		RGS_pulse_value<=16'd0;
	end
	else if(sampling_signal)
	begin
		rFrame_Start_Sig<=1'b1;		
		RGS_pulse_value<=RGS_pulse_count;
        RESR_pulse_value<=RESR_pulse_count1-RESR_pulse_count2;
	end
	else
		rFrame_Start_Sig<=1'b0;
/*****************************************************************
???????????????????
*****************************************************************/

always@(posedge CLOCK_50M or negedge RST_n)
		if(!RST_n)
		begin
			start_send<=1'b0;
			rData_Send_Sig<=1'b0;
			num<=8'd0;
		end
		else if(rFrame_Start_Sig)
		begin
			start_send<=1'b1;
			rData_Send_Sig<=1'b0;
			num<=8'd0;
		end
		else if(start_send)
		begin
			case(num)
			8'd0:begin rData<=RESR_pulse_value[15:8];num<=num+8'd1;rData_Send_Sig<=1'b1;end
			8'd2:begin rData<=RESR_pulse_value[7:0];num<=num+8'd1;rData_Send_Sig<=1'b1;end
			8'd4:begin rData<=RGS_pulse_value[15:8];num<=num+8'd1;rData_Send_Sig<=1'b1;end
			8'd6:begin rData<=RGS_pulse_value[7:0];num<=num+8'd1;rData_Send_Sig<=1'b1;end
			default:
				if(num<8'd6)
				begin num<=num+8'd1;rData_Send_Sig<=1'b0;end
			   else if(num==8'd7)
				begin start_send<=1'b0;end
			endcase
		end

	assign Data=rData;
	assign Data_Send_Sig=rData_Send_Sig;
	assign Frame_Start_Sig=rFrame_Start_Sig;
endmodule
